version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgresql;Port=5432;Database=FIAPCloudGames;Username=postgres;Password=P@ssw0rdF1@PT3ch;
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - fcg-network
    restart: unless-stopped

  # PostgreSQL para persistência de dados
  postgresql:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=FIAPCloudGames
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=P@ssw0rdF1@PT3ch
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - fcg-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Prometheus para monitoramento
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - fcg-network
    restart: unless-stopped

  # Grafana para visualização
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - fcg-network
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - fcg-network
    restart: unless-stopped

volumes:
  postgresql_data:
  # sqlserver_data:
  grafana_data:

networks:
  fcg-network:
    driver: bridge