name: CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  AZURE_WEBAPP_NAME: '${{ vars.AZURE_WEBAPP_NAME }}'
  DOCKER_IMAGE_NAME: '${{ vars.DOCKER_USERNAME }}/fiap-cloud-games'
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug Variables (for troubleshooting)
      run: |
        echo "Azure WebApp Name: ${{ env.AZURE_WEBAPP_NAME }}"
        echo "Docker Username: ${{ env.DOCKER_USERNAME }}"
        echo "Docker Image: ${{ env.DOCKER_IMAGE_NAME }}"
        echo "JWT Issuer: ${{ vars.JWT_ISSUER }}"
        echo "Resource Group: ${{ vars.AZURE_RESOURCE_GROUP }}"
        echo "Loki URI: ${{ vars.LOKI_URI }}"
        echo "Secrets are hidden, but checking if they exist:"
        echo "Azure SQL Connection String: ${{ secrets.AZURE_SQL_CONNECTION_STRING != '' }}"
        echo "JWT Key: ${{ secrets.JWT_KEY != '' }}"
        echo "Docker Password: ${{ secrets.DOCKER_PASSWORD != '' }}"
        echo "Azure Credentials: ${{ secrets.AZURE_CREDENTIALS != '' }}"

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build and publish
      run: |
        dotnet build --configuration Release --no-restore
        dotnet publish -c Release -o ./publish --no-build

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .
        docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

    - name: Push Docker image
      run: |
        docker push ${{ env.DOCKER_IMAGE_NAME }}:latest
        docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Configure Azure Web App Settings
      run: |
        # Configurar variáveis de ambiente usando Azure CLI
        az webapp config appsettings set \
          --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --settings \
            "ConnectionStrings__DefaultConnection=${{ secrets.AZURE_SQL_CONNECTION_STRING }}" \
            "Jwt__Key=${{ secrets.JWT_KEY }}" \
            "Jwt__Issuer=${{ vars.JWT_ISSUER }}" \
            "ASPNETCORE_ENVIRONMENT=Production" \
            "Serilog__WriteTo__1__Args__uri=${{ vars.LOKI_URI }}"

    - name: Configure Docker Registry Settings
      run: |
        # Configurar credenciais do Docker Hub no Azure Web App
        az webapp config container set \
          --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --docker-custom-image-name ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} \
          --docker-registry-server-url https://index.docker.io/v1/ \
          --docker-registry-server-user ${{ env.DOCKER_USERNAME }} \
          --docker-registry-server-password ${{ secrets.DOCKER_PASSWORD }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: '${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}'